<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Huzeifa Naim</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <link href="http://localhost:4000/"/>
 <updated>2018-08-14T17:56:38+03:00</updated>
 <id>http://localhost:4000</id>
 <author>
   <name>Huzeifa Naim</name>
   <email>huzeifanaim@gmail.com</email>
 </author>

 
 <entry>
   <title>Python Workshop at Nairobi Innovation Week 2018</title>
   <link href="http://localhost:4000/python/2018/03/09/python-workshop-nwi-2018/"/>
   <updated>2018-03-09T00:00:00+03:00</updated>
   <id>http://localhost:4000/python/2018/03/09/python-workshop-nwi-2018</id>
   <content type="html">&lt;p&gt;On the 5th and 6th of March 2018, I participated in the Python workshop organized by BotLab at the Nairobi Innovation Week 2018.
The workshop aimed at teaching the Python programming language and using it to implement a basic artificial neural network called a perceptron.
Our educator at the workshop was Kevin Nderitu, a passionate software developer.&lt;/p&gt;

&lt;p&gt;On the first day we were introduced to the Python programming language.
The following concepts were introduced:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Variables.&lt;/li&gt;
  &lt;li&gt;Conditional statements and loops.&lt;/li&gt;
  &lt;li&gt;Functions.&lt;/li&gt;
  &lt;li&gt;Strings.&lt;/li&gt;
  &lt;li&gt;Lists and list comprehensions.&lt;/li&gt;
  &lt;li&gt;Dictionaries.&lt;/li&gt;
  &lt;li&gt;Tuples.&lt;/li&gt;
  &lt;li&gt;Object oriented programming, inheritance and polymorphism.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;During the session, we were given a task to write a python program that counts the number of spaces in a sentence. This was successfully achieved.&lt;/p&gt;

&lt;p&gt;On the second day, we proceeded to learn about advanced concepts in python such as abstraction, encapsulation, exception catching and multi-threading. Then after we headed for the fun and interesting part of the workshop: implementation of the perceptron.&lt;/p&gt;

&lt;p&gt;A perceptron models a single artificial neuron. It consists of a set of inputs, each having a corresponding random weight, a bias, and an activation function that generates the output. For our case, we created a perceptron to determine whether a point (x, y) on the cartesian plane is above or below a given line. This is an example of a classification problem.&lt;/p&gt;

&lt;p&gt;The steps for coding the perceptron is described as follows:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Each input (x and y) is multipied with its corresponding weight. The result is called the weighted input. The weights are randomly generated for each input. Also a bias of value 1 is added to the set of inputs to ensure that the sum of the weighted inputs is always non-zero.&lt;/li&gt;
  &lt;li&gt;The sum of all the weighted inputs is determined.&lt;/li&gt;
  &lt;li&gt;This sum is passed as a parameter to an activation function which generates the output.&lt;/li&gt;
  &lt;li&gt;The activation function produces the output based on the following criteria: if sum is greater than zero, it returns 1, else it returns -1.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The above steps are defined in the feedForward method of the Perceptron class, which takes the set of inputs to the perceptron as its arguement.&lt;/p&gt;

&lt;p&gt;The perceptron needs to be trained in order to produce the correct ouput. The definition of the training function is described as follows:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;A guess of the output is determined using randomly chosen inputs.&lt;/li&gt;
  &lt;li&gt;The error is evaluated, that is, the difference between the desired output (correct answer) and the guessed output.&lt;/li&gt;
  &lt;li&gt;Each weight is modified based on the magitude of the error. The expression for updating the weight is as follows:
New weight = old weight + (c * error * input), where c is the learning rate.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Lastly, a helper class called Generator was created to generate the training data of size n, which consisted of randomly selected values of x and y (the inputs) together with the correct answer (whether the point (x, y) is above or below the line).&lt;/p&gt;

&lt;p&gt;The working code for the perceptron is given below:
&lt;script src=&quot;https://gist.github.com/huzeifa/d55e7fb91c50e9184060eb4ac8b34676.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Attending the workshop was of great benefit to me as it gave me a jump start to learn more about artificial intelligence and also it helped me to strengthen my understanding of the advance concepts of the Python programming language.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Simulating a Constant-Current Source Circuit using Qucs</title>
   <link href="http://localhost:4000/circuits/2017/08/27/constant-current-source/"/>
   <updated>2017-08-27T00:00:00+03:00</updated>
   <id>http://localhost:4000/circuits/2017/08/27/constant-current-source</id>
   <content type="html">&lt;p&gt;Circuit simulation is a very important skill to acquire since it aids in verifying circuit designs and helps you to master ciruit analysis.&lt;/p&gt;

&lt;p&gt;In this post, I will show you how to use Qucs to perform a circuit simulation of a simple current source circuit employing a bipolar junction transistor (BJT) and diodes.
This guide, however, doesnâ€™t attempt to explain how the circuit works, but rather it is aimed at demonstrating how to simulate it using Qucs. The objective of the simulation is to measure the current supplied by the current source and to verify that the current supplied is constant over a given voltage range.&lt;/p&gt;

&lt;h2 id=&quot;what-is-qucs&quot;&gt;What is Qucs?&lt;/h2&gt;
&lt;p&gt;Qucs is an opensource circuit simulation software with a graphical user interface. It can be used to perform several types of simulations such as DC, AC, S-parameter, Harmonic Balance analysis, noise analysis and transient analysis. Qucs provides all the standard lumped components together with many semiconductor based devices and models such as opamps, diodes, MOSFETs, PMOSFETs and many more. In addition, digital simulation can also be performed in Qucs.&lt;/p&gt;

&lt;h2 id=&quot;installing-qucs&quot;&gt;Installing Qucs&lt;/h2&gt;
&lt;p&gt;Qucs is fairly easy to install and is available on all major Linux based operating systems such as Fedora, Ubuntu, Arch Linux, etc. Qucs is also available on Windows and Mac OS. Please visit the link below to learn more about obtaining Qucs for your preferred Linux based OS.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://qucs.sourceforge.net/download.html&quot;&gt;Download Qucs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ubuntu users should do a simple &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt-get install qucs&lt;/code&gt;, and Fedora users should punch in &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo dnf install qucs&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Once Qucs has been successfully installed on your machine, launch it using the OS program menu or simply type qucs in the terminal and hit Enter.&lt;/p&gt;

&lt;h2 id=&quot;exploring-the-qucs-environment&quot;&gt;Exploring the Qucs Environment&lt;/h2&gt;
&lt;p&gt;Qucs is easy to use once you have a firm grasp of its interface. I suggest you take a few minutes to explore the interface in order to familiarize yourself with the program. You can obtain a description of an icon or menu by simply hovering the mouse pointer over it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/constant-current source/2017-08-28-081520_1366x768_scrot.jpg&quot; alt=&quot;Screenshot of Qucs main window&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For this tutorial, I have briefly outlined the key things you need to know about the interface.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;The dotted off-white area on the right is the work area. This is where the circuits to be simulated are constructed and diagrams such as graphs and tables are placed.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;Dock Window&lt;/code&gt; on the left, consisting of vertical tabs helps you to easily access your projects, see the contents of your simulation and select components for placing in the work area.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The toolbar on top is useful, as it readily provides you with the function of wiring, manipulating components and executing simulations.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;To add a component in the work area, click on the &lt;code class=&quot;highlighter-rouge&quot;&gt;Components&lt;/code&gt; tab availabe in the dock window. Choose the category of the component you require from the dropdown box. Resistors, capacitors and inductors are located under lumped components, semiconductor devices are available under non-linear devices etc. Select the desired component from the list and drag the pointer to the work area. At this point you will notice that the component symbol is accompanied with your mouse pointer. The orientation of the component can be altered by right clicking. Finally, left click to place the component in the work area. You will observe that the component symbol is still attached to the pointer implying that you can place another one. Press &lt;code class=&quot;highlighter-rouge&quot;&gt;ESC&lt;/code&gt; or click the pointer icon in the toolbar to deactivate the placing of the component.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;To change the properties of the component, select it, right click and choose &lt;code class=&quot;highlighter-rouge&quot;&gt;Edit Properties&lt;/code&gt; from the menu. A dialog box pops up, from which you can edit the name and parameters of the component. You can also decide which parameters of the component to display in the schematic. This is achieved by selecting the parameter from the properties section and checking or un-checking the &lt;code class=&quot;highlighter-rouge&quot;&gt;display in schematic&lt;/code&gt; option.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A Wire is used to connect one component to the other. It can be added from the &lt;code class=&quot;highlighter-rouge&quot;&gt;Insert&lt;/code&gt; menu or the toolbar. A useful tip when wiring: to make a corner, simply right click.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It is important to make sure that your circuit is grounded properly or otherwise the simulation will not work as intended. The &lt;code class=&quot;highlighter-rouge&quot;&gt;Ground&lt;/code&gt; port is availabe in the toolbar or from the &lt;code class=&quot;highlighter-rouge&quot;&gt;Insert&lt;/code&gt; menu.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;To perform the simulation, it is imperative to have a simulation block placed in your schematic. It is available in the &lt;code class=&quot;highlighter-rouge&quot;&gt;Components&lt;/code&gt; tab under the &lt;code class=&quot;highlighter-rouge&quot;&gt;simulations&lt;/code&gt; category.
For this tutorial we will be using the &lt;code class=&quot;highlighter-rouge&quot;&gt;dc simulation&lt;/code&gt; block.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It is also a good idea to know the keyboard shortcuts for performing various tasks as they save time. The shortcut to each task is available from the menubar; it is indicated beside the menu item for that particular task.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Thatâ€™s it folks, and you are ready to make your first simulation.&lt;/p&gt;

&lt;h2 id=&quot;constructing-the-circuit&quot;&gt;Constructing the Circuit&lt;/h2&gt;
&lt;p&gt;The end result of the constructed circuit is shown below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/constant-current source/final-circuit.png&quot; alt=&quot;Final circuit&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The assembly of the circuit is an exercise left to perform on your own using the descriptions given above. I have included some notes incase if you get stuck.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;As indicated previusly, the resistor is found under the &lt;code class=&quot;highlighter-rouge&quot;&gt;lumped components&lt;/code&gt; category. To change its value, refer to point no. 5 of the above section. Alternatively, you can change it directly from the work area by double-clicking on the predefined value and replacing it with your desired value. It is okay to omit the units.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The npn transistor and the diode are located under &lt;code class=&quot;highlighter-rouge&quot;&gt;non-linear components&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The voltage source is obtained from the &lt;code class=&quot;highlighter-rouge&quot;&gt;sources&lt;/code&gt; category.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The ammeter measures the current flowing between the positive terminal of the voltage source and the collector of the transistor. This is where the load is supposed to be placed. It is found under &lt;code class=&quot;highlighter-rouge&quot;&gt;probes&lt;/code&gt; as &lt;code class=&quot;highlighter-rouge&quot;&gt;Current Probe&lt;/code&gt;. Ensure that the ammeter is positioned correctly, that is, the arrow should be pointing away from the voltage source. This can be achieved by simply right-clicking prior to placing it, or by using the rotate tool from the toolbar.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Lastly, donâ€™t forget to place the &lt;code class=&quot;highlighter-rouge&quot;&gt;dc simulation&lt;/code&gt; block. And of-course &lt;strong&gt;save&lt;/strong&gt; your work&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once you have completed the circuit construction, press &lt;code class=&quot;highlighter-rouge&quot;&gt;F2&lt;/code&gt; to execute the simulation.&lt;/p&gt;

&lt;h2 id=&quot;performing-the-simulation&quot;&gt;Performing the Simulation&lt;/h2&gt;
&lt;p&gt;Nothing happens at this point except a new data display page opens up. This is because we havenâ€™t yet configured the simulation to provide us with data.&lt;/p&gt;

&lt;p&gt;One of the main aim of the simulation is to measure the current flowing between the collector of the transistor and the positive terminal of the voltage source. That is why we have placed a current probe between them.&lt;/p&gt;

&lt;p&gt;For us to obtain the value of this current we need to add a &lt;code class=&quot;highlighter-rouge&quot;&gt;diagram&lt;/code&gt; in the new data display page (You can also place it in the schematics page). There are several types of diagrams available such as Cartesian, Polar, Tabular, Smith Chart, etc.  Since we only need one discrete reading, the diagram of choice will be &lt;code class=&quot;highlighter-rouge&quot;&gt;Tabular&lt;/code&gt;. In the &lt;code class=&quot;highlighter-rouge&quot;&gt;Components&lt;/code&gt; tab, from the dropdown box, select &lt;code class=&quot;highlighter-rouge&quot;&gt;diagrams&lt;/code&gt; and from the list choose &lt;code class=&quot;highlighter-rouge&quot;&gt;Tabular&lt;/code&gt;. Drag the pointer to the page, and left click. Automatically a dialog box will popup prompting you to select the reading you would like to display. Illustrated below is the &lt;code class=&quot;highlighter-rouge&quot;&gt;Edit Diagram Properties&lt;/code&gt; dialog box.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/constant-current source/2017-08-31-113153_627x537_scrot.png&quot; alt=&quot;Edit Diagram Properties Box&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Our main area of concern is the Dataset section. It consists of a dropdown box, for selecting the dataset from which you want to display the values and, a table listing the available readings to display. In our case, we will be having &lt;code class=&quot;highlighter-rouge&quot;&gt;V1.I&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Pr1.I&lt;/code&gt;. Notice the naming pattern. The characters before the dot represent the name of the component from which we want to extract data;  in our case the &lt;code class=&quot;highlighter-rouge&quot;&gt;V1&lt;/code&gt; for voltage source and &lt;code class=&quot;highlighter-rouge&quot;&gt;Pr1&lt;/code&gt; for current probe. The letter after the dot determines whether it is a voltage reading (V) or a current reading (I). Since we require the reading from the currrent probe, double-click on the &lt;code class=&quot;highlighter-rouge&quot;&gt;Pr1.I&lt;/code&gt; entry. Consequently, the Graph section will be populated with &lt;code class=&quot;highlighter-rouge&quot;&gt;Pr1.I&lt;/code&gt; entry. Click on &lt;code class=&quot;highlighter-rouge&quot;&gt;Apply&lt;/code&gt; followed by &lt;code class=&quot;highlighter-rouge&quot;&gt;OK&lt;/code&gt;. There you go! A table with the reading from the current probe will be displayed under the column heading &lt;code class=&quot;highlighter-rouge&quot;&gt;Pr1.I&lt;/code&gt;. The current is measured in Amps. A screenshot of the table is shown below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/constant-current source/2017-08-31-113802_369x257_scrot.png&quot; alt=&quot;Screenshot of table with current reading&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This circuit was designed to drive an LED, therefore a current of 22.2mA is registered. You can experiment with the circuit by changing the value of the &lt;code class=&quot;highlighter-rouge&quot;&gt;R2&lt;/code&gt; resistor and re-simulating to observe the new value of the current reading.&lt;/p&gt;

&lt;p&gt;Another cool thing you can do is calculating the &lt;code class=&quot;highlighter-rouge&quot;&gt;DC bias&lt;/code&gt;. This will display the potential at each node in the circuit and the current reading on the probes. This is achieved by either pressing &lt;code class=&quot;highlighter-rouge&quot;&gt;F8&lt;/code&gt; or selecting the &lt;code class=&quot;highlighter-rouge&quot;&gt;Simulation&lt;/code&gt; menu from the menu bar and choosing &lt;code class=&quot;highlighter-rouge&quot;&gt;Calculate DC bias&lt;/code&gt;.
The outcome is illustrated below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/constant-current source/2017-08-31-121407_345x430_scrot.png&quot; alt=&quot;Calculate DC bias&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Congratulations! You can now obtain meaningful data from the simulation exercise.&lt;/p&gt;

&lt;h2 id=&quot;going-a-step-further&quot;&gt;Going a Step Further&lt;/h2&gt;
&lt;p&gt;We also need to verify whether the current flowing is constant regardless of the voltage source value, that is, there shouldnâ€™t be a significant variation in current when we alter the voltage source value from, letâ€™s say, 5V to 15V. To accomplish this, we need to employ the &lt;code class=&quot;highlighter-rouge&quot;&gt;Parameter sweep&lt;/code&gt; simulation. We will measure the current flowing for the following voltage range: 5 - 15V. Kindly follow the steps below to perfom the parameter sweep simulation.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Insert the &lt;code class=&quot;highlighter-rouge&quot;&gt;Parameter sweep&lt;/code&gt; simulation block in the schematics page.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Double-click on the block to activate the properties dialog box.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Edit the properties as follows:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Simulation&lt;/strong&gt;: DC1&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Sweep Parameter&lt;/strong&gt;: Vs&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Type&lt;/strong&gt;: linear&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Start&lt;/strong&gt;: 5V&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Stop&lt;/strong&gt;: 15V&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Step&lt;/strong&gt;: 1&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;Click on &lt;code class=&quot;highlighter-rouge&quot;&gt;Apply&lt;/code&gt;, then select &lt;code class=&quot;highlighter-rouge&quot;&gt;OK&lt;/code&gt;. The above configuration is illustrated below:&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/images/constant-current source/2017-09-04-212716_442x379_scrot.png&quot; alt=&quot;Parameter sweep configuration&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Double-click on the voltage source and replace the existing value of the voltage source to Vs. This makes a reference to the Sweep Parameter defined earlier. Click on Apply and OK. This is shown in the image below:&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/images/constant-current source/2017-09-04-212851_410x348_scrot.png&quot; alt=&quot;Edit voltage source value to Vs&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We will represent the data graphically on a Cartesian diagram and we will be expecting a horizontal line, implying that current is constant over the voltage range specified. To construct the graph, follow the steps outlined below:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;In the data display page, insert the &lt;code class=&quot;highlighter-rouge&quot;&gt;Cartesian&lt;/code&gt; diagram and embrace yourself for the properties box.&lt;/li&gt;
      &lt;li&gt;In the &lt;code class=&quot;highlighter-rouge&quot;&gt;Data&lt;/code&gt; tab, from the &lt;code class=&quot;highlighter-rouge&quot;&gt;Dataset&lt;/code&gt; area, double-click on the &lt;code class=&quot;highlighter-rouge&quot;&gt;Pr1.I&lt;/code&gt; entry. This activates the &lt;code class=&quot;highlighter-rouge&quot;&gt;Graph Input&lt;/code&gt; section that gives you the option to choose the line color, style, thickness and position of y-axis (left or right). Make the selections as you wish and proceed to the &lt;code class=&quot;highlighter-rouge&quot;&gt;Properties&lt;/code&gt; tab.&lt;/li&gt;
      &lt;li&gt;In the &lt;code class=&quot;highlighter-rouge&quot;&gt;Properties&lt;/code&gt; tab, give appropriate labels to the x-axis and the left/right axis (this depends on the selection you made in the &lt;code class=&quot;highlighter-rouge&quot;&gt;Data&lt;/code&gt; tab). At the bottom, you can also choose to show or not to show the grid, choose grid color, style and type (logarithmic). Switch to the &lt;code class=&quot;highlighter-rouge&quot;&gt;Limits&lt;/code&gt; tab for the final configuration.&lt;/li&gt;
      &lt;li&gt;Our area of concern will be the &lt;code class=&quot;highlighter-rouge&quot;&gt;left Axis&lt;/code&gt; (or right). In that section, check the &lt;code class=&quot;highlighter-rouge&quot;&gt;manual&lt;/code&gt; checkbox and edit the start, step and stop values as follows:
        &lt;ul&gt;
          &lt;li&gt;&lt;strong&gt;start&lt;/strong&gt;: 0.01&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;step&lt;/strong&gt;: 0.01&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;stop&lt;/strong&gt;: 0.04&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Click on &lt;code class=&quot;highlighter-rouge&quot;&gt;Apply&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;OK&lt;/code&gt;.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;The above series of steps are illustrated below:&lt;/p&gt;

    &lt;p&gt;&lt;em&gt;Data tab&lt;/em&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/images/constant-current source/2017-09-04-212925_687x537_scrot.png&quot; alt=&quot;Cartesian diagram properties, Data tab&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;em&gt;Properties tab&lt;/em&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/images/constant-current source/2017-09-04-213024_687x537_scrot.png&quot; alt=&quot;Cartesian diagram properties, Properties tab&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;em&gt;Limits Tab&lt;/em&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/images/constant-current source/2017-09-04-213052_687x537_scrot.png&quot; alt=&quot;Cartesian diagram properties, Limits tab&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The graph and the final schematic (notice the addition of a LED as load) are shown below:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The graph&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/constant-current source/2017-09-04-213125_741x510_scrot.png&quot; alt=&quot;Current against voltage graph&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The final schematic&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/constant-current source/2017-09-04-213207_505x361_scrot.png&quot; alt=&quot;The final schematic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The graph illustrates the change in current over the specified voltage range. It is fairly horizontal, and there is a minute change of 2mA between 5 and 15 volts. Although, for some applications, this change may be significant and thus a circuit with an improved accuracy is needed.&lt;/p&gt;

&lt;p&gt;Bravo! You have successfully performed a parameter sweep simulation and displayed the results graphically on a cartesian diagram.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This post was aimed at giving you a brief overview of the Qucs interface, showing you how to conduct circuit simulations in order to obtain measurements and, use them to verify the outcome of the circuit.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://qucs.sourceforge.net/index.html&quot;&gt;Qucs project&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.instructables.com/id/Simple-Led-driverConstant-current-source-20-mA/&quot;&gt;Simple Led Driver/Constant-current Source 20 MA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>A Visit to a Machine Learning Workshop</title>
   <link href="http://localhost:4000/machine-learning/2017/03/17/machine-learning-workshop/"/>
   <updated>2017-03-17T00:00:00+03:00</updated>
   <id>http://localhost:4000/machine-learning/2017/03/17/machine-learning-workshop</id>
   <content type="html">&lt;p&gt;Today, I had a great opportunity to attend a workshop on machine learning organized by the Intel Student Partner Program of the University of Nairobi. The speaker at the workshop was my class mate, Robert Kigen. It was a very informative workshop that introduced us to the world of machine learning via real world examples. The following is a brief summary of what I learnt from the workshop:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Machine learning involves the use of learning algorithms to train on data in order to give meaningful outcomes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Applications of machine learning include: Fraud detection, Face detection, IoT Analysis, Natural Language Processing, Movie recommendation, Spam Filtering/Virus detection.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Machine learning problems are solved using classification, regression, clustering and recommendations. Classification is used when grouping of data is required. Regression involves predicting real valued output for an entity given a set of features. Clustering is an example of unsupervised learning used to group entities with similar features.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Main types of machine learning are &lt;strong&gt;supervised learning&lt;/strong&gt; and &lt;strong&gt;unsupervised learning&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In supervised learning, right answers are used for training the model in order to make predictions.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Unsupervised learning identifies patterns and common trends in a set of data. Right answers are not provided.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also got to learn about &lt;a href=&quot;https://en.wikipedia.org/wiki/Boston_Dynamics&quot;&gt;Boston Dynamics&lt;/a&gt;; a company that engineers and designs robots and, the &lt;a href=&quot;https://cloud.google.com/vision/&quot;&gt;Google Cloud Vision API&lt;/a&gt;; a REST API that employs machine learning models to analyze the content of images.&lt;/p&gt;

&lt;p&gt;It was worth attending the workshop since it gave me a better insight on concepts of machine learning and its applications.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="http://localhost:4000/2016/01/02/example-content/"/>
   <updated>2016-01-02T00:00:00+03:00</updated>
   <id>http://localhost:4000/2016/01/02/example-content</id>
   <content type="html">&lt;div class=&quot;message&quot;&gt;
  Howdy! This is an example blog post that shows several types of HTML content supported in this theme.
&lt;/div&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;strong&gt;sem malesuada magna&lt;/strong&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt;

&lt;p&gt;HTML defines a long list of available inline tags, a complete list of which can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;To bold text&lt;/strong&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;To italicize text&lt;/em&gt;, use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Abbreviations, like &lt;abbr title=&quot;HyperText Markup Langage&quot;&gt;HTML&lt;/abbr&gt; should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;, with an optional &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; attribute for the full phrase.&lt;/li&gt;
  &lt;li&gt;Citations, like &lt;cite&gt;â€” Mark otto&lt;/cite&gt;, should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Deleted&lt;/del&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;del&amp;gt;&lt;/code&gt; and &lt;ins&gt;inserted&lt;/ins&gt; text should use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Superscript &lt;sup&gt;text&lt;/sup&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; and subscript &lt;sub&gt;text&lt;/sub&gt; uses &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these elements are styled by browsers with few modifications on our part.&lt;/p&gt;

&lt;h2 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h2&gt;

&lt;p&gt;Footnotes are supported as part of the Markdown syntax. Hereâ€™s one in action. Clicking this number&lt;sup id=&quot;fnref:fn-sample_footnote&quot;&gt;&lt;a href=&quot;#fn:fn-sample_footnote&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; will lead you to a footnote. The syntax looks like:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Clicking this number[^fn-sample_footnote]&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Each footnote needs the &lt;code class=&quot;highlighter-rouge&quot;&gt;^fn-&lt;/code&gt; prefix and a unique ID to be referenced for the footnoted content. The syntax for that list looks something like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[^fn-sample_footnote]: Handy! Now click the return link to go back.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can place the footnoted content wherever you like. Markdown parsers should properly place it at the bottom of the post.&lt;/p&gt;

&lt;h2 id=&quot;heading&quot;&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3 id=&quot;code&quot;&gt;Code&lt;/h3&gt;

&lt;p&gt;Inline code is available with the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;code&amp;gt;&lt;/code&gt; element. Snippets of multiple lines of code are supported through Pygments. Longer lines will automatically scroll horizontally when needed.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console
&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments
&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;return a + b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function
&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You may also optionally show code snippets with line numbers. Add &lt;code class=&quot;highlighter-rouge&quot;&gt;linenos&lt;/code&gt; to the Pygments tags.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console
&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments
&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;return a + b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function
&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3 id=&quot;gists-via-github-pages&quot;&gt;Gists via GitHub Pages&lt;/h3&gt;

&lt;p&gt;Vestibulum id ligula porta felis euismod semper. Nullam quis risus eget urna mollis ornare vel eu leo. Donec sed odio dui.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/13f94b734a4ddb132735.js?file=gist.md&quot;&gt; &lt;/script&gt;

&lt;p&gt;Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Nullam quis risus eget urna mollis ornare vel eu leo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec sed odio dui. Vestibulum id ligula porta felis euismod semper.&lt;/p&gt;

&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
  &lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
  &lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
  &lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
  &lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;HyperText Markup Language (HTML)&lt;/dt&gt;
  &lt;dd&gt;The language used to describe and define the content of a Web page&lt;/dd&gt;

  &lt;dt&gt;Cascading Style Sheets (CSS)&lt;/dt&gt;
  &lt;dd&gt;Used to describe the appearance of Web content&lt;/dd&gt;

  &lt;dt&gt;JavaScript (JS)&lt;/dt&gt;
  &lt;dd&gt;The programming language used to build advanced Web sites and applications&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;h3 id=&quot;images&quot;&gt;Images&lt;/h3&gt;

&lt;p&gt;Quisque consequat sapien eget quam rhoncus, sit amet laoreet diam tempus. Aliquam aliquam metus erat, a pulvinar turpis suscipit at.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://placehold.it/800x400&quot; alt=&quot;placeholder&quot; title=&quot;Large example image&quot; /&gt;
&lt;img src=&quot;http://placehold.it/400x200&quot; alt=&quot;placeholder&quot; title=&quot;Medium example image&quot; /&gt;
&lt;img src=&quot;http://placehold.it/200x200&quot; alt=&quot;placeholder&quot; title=&quot;Small example image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;tables&quot;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Upvotes&lt;/th&gt;
      &lt;th&gt;Downvotes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Totals&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alice&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charlie&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/poole/poole/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:fn-sample_footnote&quot;&gt;
      &lt;p&gt;Handy! Now click the return link to go back.Â &lt;a href=&quot;#fnref:fn-sample_footnote&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
 </entry>
 

</feed>
